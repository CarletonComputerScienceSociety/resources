$orbitItemSize: 1.35em;
$map: (
  ring-0: 4,
  ring-1: 3,
  ring-2: 6,
  ring-3: 8,
);
$lastRing: 2;

.orbit {
  width: 33vw;
  display: flex;
  margin-right: 2vw;
  justify-content: center;
  align-items: center;
}

.orbit-icon {
  width: $orbitItemSize !important;
  height: $orbitItemSize !important;
}

.orbit-wrap {
  list-style: none;
  font-size: 1.3em;

  > li {
    position: absolute;
    transform: translate(-50%, -50%);
  }
}

ul[class^="ring"] {
  @extend %ring;
  transition: all 300ms ease-in-out;
  li {
    @extend %orbiting-object;
    transition: all 300ms ease-in-out;
  }
}

@mixin orbit-item($numItems, $numRing) {
  @for $s from 1 through $numItems {
    // Spread items over the ring
    $deg: 380deg / $numItems;

    .ring-#{$numRing} > *:nth-of-type(#{$s}) {
      //PUTS ITEMS ON RINGS
      transform: rotate($s * $deg)
        translate(9.5em - ($numRing * 2.5))
        rotate(-$s * $deg);
    }
  }
}

// Render rings
@for $i from 0 through $lastRing {
  .ring-#{$i} {
    // decrease each ring in size
    width: 19em - ($i * 5);
    height: 19em - ($i * 5);
    animation: clockwiseRotate 35s - ($i * 5) linear infinite;

    i {
      animation: counterClockwiseRotate 35s - ($i * 5) linear infinite;
    }

    .m-icon {
      animation: counterClockwiseRotate 35s - ($i * 5) linear infinite;
    }
  }

  @include orbit-item(map-get($map, ring-#{$i}), $i);
}

%ring {
  border: solid 1px #000000;
  position: relative;
  padding: 0;
  border-radius: 50%;
  list-style: none;
  box-sizing: content-box;
}

%orbiting-object {
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  width: $orbitItemSize;
  height: $orbitItemSize;
  margin: -$orbitItemSize / 2;
}

/*
  center;
*/
.orbit-center {
  z-index: 5;
  font-size: 2em;
  width: 5.1em;
  height: 5.1em;
  line-height: 1.8em;
  text-align: center;
  background: white;
  border-radius: 50%;
  border: 1px solid #000000 !important;
  background-image: url(/images/computer.png);
  background-size: contain;
  background-size: cover;
  z-index: 0;

  &:hover .orbit-center__icon {
    transform: rotateZ(0deg);
  }
}
.orbit-center__icon {
  transform: rotateZ(-360deg);
  transition: all 500ms ease-in-out;
}

/* 
animations 
*/
@keyframes clockwiseRotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes counterClockwiseRotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(-360deg);
  }
}

@media only screen and (max-width: 500px) {
  .orbit-wrap {
    font-size: 1em;
  }

  .orbit {
    margin-right: 8vw;
  }
}

.student-life {
  background-color: #ffdddd;
  color: rgb(255, 72, 72);
}

.faqs {
  background-color: #fffddd;
  color: #fdc11a;
}

.careers {
  background-color: #ddf8ff;
  color: #42c4fc;
}

.academics {
  background-color: #ddfff4;
  color: #00c29f;
}

.tbd {
  background-color: #dddddd;
  color: #4b4b4b;
}

.self-learning {
  background-color: #ffddcc;
  color: #ff8c00;
}

.courses {
  background-color: #f5ddff;
  color: #a64dff;
}

.o-icon {
  // width: 3.0rem;
  // height: 3.0rem;
  padding: 0.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
}
